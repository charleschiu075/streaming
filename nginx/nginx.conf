worker_processes auto;
# 將錯誤日誌輸出到標準錯誤流，由 Docker 管理
error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        allow play all;
        
        application live {
            live on;
            record off;
            
            # 推流開始驗證 - 使用 Docker 內部網路名稱
            on_publish http://api:5000/api/stream/verify;
            
            # 推流結束回調 - 新增這個配置
            on_publish_done http://api:5000/api/stream/end;
            
            # 允許所有 IP 推流 (開發環境)
            allow publish all;
            
            # HLS 設定
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3;
            hls_playlist_length 60;
            hls_continuous on;
            hls_cleanup on;
            
            # HLS 嵌套目錄結構，支援多用戶
            hls_nested on;
            
            # DASH 設定 (可選)
            dash on;
            dash_path /tmp/dash;
            dash_fragment 3;
            dash_playlist_length 60;
            dash_cleanup on;
            dash_nested on;
            
            # 推流認證超時設定
            play_time_fix on;
            publish_time_fix on;
        }
    }
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 優化設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 16M;
    
    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 將訪問日誌輸出到標準輸出，錯誤日誌到標準錯誤流
    access_log /dev/stdout;
    error_log /dev/stderr warn;
    
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;
        
        # 安全頭設定
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # HLS 串流端點 - 支援巢狀目錄結構
        location ~ ^/hls/(.+\.(m3u8|ts))$ {
            alias /tmp/hls/$1;
            
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            # CORS 設定
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Range, Content-Type";
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
            
            # 處理 OPTIONS 請求
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                add_header Access-Control-Allow-Headers "Range, Content-Type";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
            
            # 檢查文件是否存在
            try_files $uri =404;
        }
        
        # 舊版 HLS 路徑兼容（如果需要）
        location /hls/ {
            alias /tmp/hls/;
            
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        }
        
        # DASH 串流端點
        location ~ ^/dash/(.+\.(mpd|m4s|mp4))$ {
            alias /tmp/dash/$1;
            
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
                video/mp4 m4s;
            }
            
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
            
            try_files $uri =404;
        }
        
        # API 代理設定 - 增加超時和緩衝設定
        location /api/ {
            proxy_pass http://api:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 增加超時設定
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 緩衝設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # 錯誤處理
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # 靜態文件服務
        location / {
            root /app/public;
            index login.html index.html;
            try_files $uri $uri/ /login.html;
            
            # 靜態文件快取設定
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # 健康檢查端點
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # RTMP 狀態頁面（可選，用於監控）
        location /rtmp-status {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            access_log off;
            
            # 限制訪問（可根據需要調整）
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # 禁止訪問隱藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 錯誤頁面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /app/public;
            internal;
        }
        
        location = /50x.html {
            root /app/public;
            internal;
        }
    }
}